#!/usr/bin/fish
set line ""
function info
    set line $line $argv
    set line $line "|"
end
function get_torrents
    xmlrpc local.rtorrent download_list | grep "String" | sed -re "s/.*String: '([0-9A-F]+)'/\1/"
end
function get_downloading
    set torrents (get_torrents)
    set incomplete 0
    for torrent in $torrents
        if test 0 -eq (xmlrpc local.rtorrent d.get_complete $torrent | grep "integer" | sed -re "s/64-bit integer: ([0-9]+)\$/\1/")
            set incomplete (math $incomplete + 1)
        end
    end
    echo $incomplete
end
function get_nowplaying
    if mocp -i | grep -E "^Title: .+" > /dev/null
        set title (mocp -i | grep -E "^Title" | sed -re "s/Title: (.*)/\1/")
    else
        set title (basename (mocp -i | grep "File" | sed -re "s/File: (.*)\$/\1/") | sed -r "s/(\.flac|\.mp3)//")
    end
    echo -n $title
end
function moc_is_playing
    if mocp -i | grep -E "^State: STOP\$" > /dev/null
        return 1
    end
    return 0
end
while true
    set torrents (get_downloading)
    if test $torrents -eq 1
        info "▼ Downloading" $torrents "torrent"
    else if test $torrents -ne 0
        info "▼ Downloading" $torrents "torrents"
    end

    if moc_is_playing
        info "♫" (get_nowplaying)
    end
    info "✔ home" (df -l | sed -nr "s/\/dev\/sda2.*([0-9]{2}%).*/\1/p")
    info "✔ sda1" (df -l | sed -nr "s/\/dev\/sda1.*([0-9]{2}%).*/\1/p")

    set line $line (date +"%Y-%m-%d %l:%M %p")

    echo $line
    sleep 5
    set line ""
end
